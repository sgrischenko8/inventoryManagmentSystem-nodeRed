[
    {
        "id": "f6204708c05878d8",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d369fdb065227917",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "postProduct",
        "url": "/postProduct",
        "method": "post",
        "upload": true,
        "swaggerDoc": "cf524b0ad7dca115",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "11ef2ff49386a797",
                "6958c528ad63263e"
            ]
        ]
    },
    {
        "id": "11ef2ff49386a797",
        "type": "mongodb out",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "Products",
        "collection": "Products",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 240,
        "y": 20,
        "wires": []
    },
    {
        "id": "e4e721d95c1848f0",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "get-all-products",
        "url": "/get-all-products",
        "method": "get",
        "upload": false,
        "swaggerDoc": "ee9209fb0e6539c7",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "d75863a115e2efb6"
            ]
        ]
    },
    {
        "id": "d75863a115e2efb6",
        "type": "mongodb in",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "get-all-products",
        "collection": "Products",
        "operation": "aggregate",
        "x": 260,
        "y": 120,
        "wires": [
            [
                "3d4909f6dd300bbb"
            ]
        ]
    },
    {
        "id": "f5f321b839154077",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "get-all-products",
        "statusCode": "",
        "headers": {},
        "x": 1000,
        "y": 100,
        "wires": []
    },
    {
        "id": "de78cedca3e0bb11",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "prepare id",
        "func": "if (msg.req.params.id.length === 24) { \n    msg.payload._id = msg.req.params.id\n    }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 200,
        "wires": [
            [
                "254982415e766c2f"
            ]
        ]
    },
    {
        "id": "29844c99a63c06b0",
        "type": "debug",
        "z": "f6204708c05878d8",
        "name": "Log GetAllPro",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 140,
        "wires": []
    },
    {
        "id": "34a9bc07d8322b6c",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "get-product-by-id",
        "url": "/get-product/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "ebb73bc2c5279f28",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "de78cedca3e0bb11"
            ]
        ]
    },
    {
        "id": "63555e1b90152c72",
        "type": "mongodb in",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "get-product-by-id",
        "collection": "Products",
        "operation": "find",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "59adebed8bc3e408"
            ]
        ]
    },
    {
        "id": "c61852bcc9124716",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 200,
        "wires": []
    },
    {
        "id": "891ab2a4cbc7cab2",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "DeleteProduct",
        "url": "/delete-product/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "29aaf1009dc089e3",
        "x": 90,
        "y": 280,
        "wires": [
            [
                "c905b1188abd46b3"
            ]
        ]
    },
    {
        "id": "14dcf2d4fb60241a",
        "type": "mongodb out",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "DeleteProduct",
        "collection": "Products",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 460,
        "y": 260,
        "wires": []
    },
    {
        "id": "752ecd61f6c59049",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 280,
        "wires": []
    },
    {
        "id": "41c24eaea94148da",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "UpdateProduct",
        "url": "/update-product/:id",
        "method": "put",
        "upload": false,
        "swaggerDoc": "0c61fe2d9c420388",
        "x": 100,
        "y": 360,
        "wires": [
            [
                "060c9075a5bbc7e1"
            ]
        ]
    },
    {
        "id": "1755970a8c369ac5",
        "type": "mongodb out",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "UpdateProduct",
        "collection": "Products",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 640,
        "y": 340,
        "wires": []
    },
    {
        "id": "8cb959356df42734",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "UpdateProduct",
        "func": "msg.query = { \"_id\": msg.payload._id }\n\nmsg.payload = {\n    \"$set\": msg.req.body\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 360,
        "wires": [
            [
                "1755970a8c369ac5",
                "19db66899a7ba4c5"
            ]
        ]
    },
    {
        "id": "19db66899a7ba4c5",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 360,
        "wires": []
    },
    {
        "id": "730834d660b008e3",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "get-all-category",
        "url": "/get-all-category",
        "method": "get",
        "upload": false,
        "swaggerDoc": "aaddef4d730c56d2",
        "x": 100,
        "y": 540,
        "wires": [
            [
                "65556c2e3924dc39"
            ]
        ]
    },
    {
        "id": "65556c2e3924dc39",
        "type": "mongodb in",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "get-all-category",
        "collection": "Category",
        "operation": "aggregate",
        "x": 260,
        "y": 540,
        "wires": [
            [
                "21ed8fd5c2f04027"
            ]
        ]
    },
    {
        "id": "972a5d48a7e0c243",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "get-all-category",
        "statusCode": "",
        "headers": {},
        "x": 720,
        "y": 560,
        "wires": []
    },
    {
        "id": "b9e2a28efa1c0ae5",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "postCategory",
        "url": "/postCategory",
        "method": "post",
        "upload": true,
        "swaggerDoc": "03727c6effbb29e6",
        "x": 90,
        "y": 480,
        "wires": [
            [
                "b370c8659a9fc48b",
                "ed4e4b5c44f96392"
            ]
        ]
    },
    {
        "id": "b370c8659a9fc48b",
        "type": "mongodb out",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "Category",
        "collection": "Category",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 240,
        "y": 460,
        "wires": []
    },
    {
        "id": "ed4e4b5c44f96392",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 370,
        "y": 480,
        "wires": []
    },
    {
        "id": "721d8e8c2e02903f",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "get-categiory-by-id",
        "url": "/get-category/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "58ed174fd26e8307",
        "x": 110,
        "y": 620,
        "wires": [
            [
                "bc0693485a18b02b"
            ]
        ]
    },
    {
        "id": "dfab357a72fead7d",
        "type": "mongodb in",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "get-categiory-by-id",
        "collection": "Category",
        "operation": "find",
        "x": 510,
        "y": 620,
        "wires": [
            [
                "b0ccb94e524ce3dc"
            ]
        ]
    },
    {
        "id": "b0ccb94e524ce3dc",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 620,
        "wires": []
    },
    {
        "id": "c9d6ab1d788d4715",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "DeleteCategory",
        "url": "/delete-category/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "7c05fce82701f832",
        "x": 100,
        "y": 700,
        "wires": [
            [
                "07cc33f43870d1e4"
            ]
        ]
    },
    {
        "id": "4da2b5250d41aca3",
        "type": "mongodb out",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "DeleteCategory",
        "collection": "Category",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 520,
        "y": 680,
        "wires": []
    },
    {
        "id": "dc545ac25b7a1c8b",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 700,
        "wires": []
    },
    {
        "id": "265ade72983a80b9",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "UpdateCategory",
        "url": "/update-category/:id",
        "method": "put",
        "upload": false,
        "swaggerDoc": "be18c0b5fa39a3c4",
        "x": 100,
        "y": 780,
        "wires": [
            [
                "540589b250d166de"
            ]
        ]
    },
    {
        "id": "a627e4b85196288e",
        "type": "mongodb out",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "UpdateCategory",
        "collection": "Category",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 700,
        "y": 760,
        "wires": []
    },
    {
        "id": "7a3c4b3d650b5d2a",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "UpdateCategory",
        "func": "msg.query = { \"_id\": msg.payload._id }\n\nmsg.payload = { \n        \"$set\": msg.req.body\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 780,
        "wires": [
            [
                "a627e4b85196288e",
                "754dab7271f06518"
            ]
        ]
    },
    {
        "id": "754dab7271f06518",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 780,
        "wires": []
    },
    {
        "id": "298b80239b581295",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "get-all-orders",
        "url": "/get-all-orders",
        "method": "get",
        "upload": false,
        "swaggerDoc": "2f6ee44f24f05311",
        "x": 90,
        "y": 960,
        "wires": [
            [
                "0ab334bca83255b0"
            ]
        ]
    },
    {
        "id": "7c16ae8781378425",
        "type": "mongodb in",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "get-all-order",
        "collection": "Order",
        "operation": "find",
        "x": 530,
        "y": 960,
        "wires": [
            [
                "3ca2ee45610a3712"
            ]
        ]
    },
    {
        "id": "2c7227fbc2ac9524",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "get-all-order",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 960,
        "wires": []
    },
    {
        "id": "551bd108028b475f",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "postOrder",
        "url": "/postOrder",
        "method": "post",
        "upload": true,
        "swaggerDoc": "9992219b0b3b6a5a",
        "x": 80,
        "y": 900,
        "wires": [
            [
                "7741118dea86650f"
            ]
        ]
    },
    {
        "id": "95331004f0b45626",
        "type": "mongodb out",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "Order",
        "collection": "Order",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 530,
        "y": 880,
        "wires": []
    },
    {
        "id": "a1f17a7c0a4505ed",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 900,
        "wires": []
    },
    {
        "id": "1e579c8cb9181c17",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "prepare id",
        "func": "msg.payload = {}\nmsg.payload._id = msg.req.params.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1040,
        "wires": [
            [
                "4c5aa2fe54a5bc7c"
            ]
        ]
    },
    {
        "id": "871e8be7a6416240",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "get-order-by-id",
        "url": "/get-order/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "594a47cf34e67aee",
        "x": 100,
        "y": 1040,
        "wires": [
            [
                "1e579c8cb9181c17"
            ]
        ]
    },
    {
        "id": "a5079ab3385a3507",
        "type": "mongodb in",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "get-order-by-id",
        "collection": "Order",
        "operation": "find",
        "x": 540,
        "y": 1040,
        "wires": [
            [
                "074f75acab93d4b2"
            ]
        ]
    },
    {
        "id": "074f75acab93d4b2",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6c9f953c7d1cf21c",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "DeleteOrder",
        "url": "/delete-order/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "8ba02c3093687597",
        "x": 90,
        "y": 1120,
        "wires": [
            [
                "082f6d61ee233efd"
            ]
        ]
    },
    {
        "id": "c08a1f65159f319f",
        "type": "mongodb out",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "DeleteOrder",
        "collection": "Order",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 490,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5c12f9defce31e82",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 1120,
        "wires": []
    },
    {
        "id": "a81a755041aa1475",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "UpdateOrder",
        "url": "/update-order/:id",
        "method": "put",
        "upload": false,
        "swaggerDoc": "2a7e921bb453b54a",
        "x": 90,
        "y": 1180,
        "wires": [
            [
                "cc25669f820d2c31"
            ]
        ]
    },
    {
        "id": "8e6c8d7b311c6f80",
        "type": "mongodb out",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "UpdateOrder",
        "collection": "Order",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 650,
        "y": 1160,
        "wires": []
    },
    {
        "id": "beb1bca37c9b54b6",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "UpdateOrder",
        "func": "msg.query = { \"_id\": msg.payload._id }\n\nmsg.payload = {\n    \"$set\": msg.req.body\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1180,
        "wires": [
            [
                "8e6c8d7b311c6f80",
                "ef6ee5bd1dc587bd"
            ]
        ]
    },
    {
        "id": "ef6ee5bd1dc587bd",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 810,
        "y": 1180,
        "wires": []
    },
    {
        "id": "dfe62194433dd1bc",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "DeleteAllOrder",
        "url": "/delete-all-order/",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "e320c1ed934e2374",
        "x": 100,
        "y": 1240,
        "wires": [
            [
                "b2840cf8c6cc205c"
            ]
        ]
    },
    {
        "id": "bc3a8e56f9908169",
        "type": "mongodb out",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "DeleteAllOrder",
        "collection": "Order",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 640,
        "y": 1220,
        "wires": []
    },
    {
        "id": "db38abdc573b91df",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "DeleteAllOrder",
        "func": "\nmsg.payload = undefined\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1240,
        "wires": [
            [
                "bc3a8e56f9908169",
                "d0b9ebeb023533a0"
            ]
        ]
    },
    {
        "id": "d0b9ebeb023533a0",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 1240,
        "wires": []
    },
    {
        "id": "b2840cf8c6cc205c",
        "type": "mongodb in",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "DeleteAllOrder",
        "collection": "Order",
        "operation": "find",
        "x": 280,
        "y": 1240,
        "wires": [
            [
                "db38abdc573b91df"
            ]
        ]
    },
    {
        "id": "e62167e7836e6310",
        "type": "objectid",
        "z": "f6204708c05878d8",
        "name": "",
        "selectedProperty": "_id",
        "x": 370,
        "y": 620,
        "wires": [
            [
                "dfab357a72fead7d"
            ]
        ]
    },
    {
        "id": "bc0693485a18b02b",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "prepare id",
        "func": "msg.payload = {}\nmsg.payload._id = msg.req.params.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 620,
        "wires": [
            [
                "e62167e7836e6310"
            ]
        ]
    },
    {
        "id": "540589b250d166de",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "upd",
        "func": "msg.payload = {}\nmsg.payload._id = msg.req.params.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 780,
        "wires": [
            [
                "69e8ac369662498c"
            ]
        ]
    },
    {
        "id": "69e8ac369662498c",
        "type": "objectid",
        "z": "f6204708c05878d8",
        "name": "",
        "selectedProperty": "_id",
        "x": 370,
        "y": 780,
        "wires": [
            [
                "7a3c4b3d650b5d2a"
            ]
        ]
    },
    {
        "id": "060c9075a5bbc7e1",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "upd",
        "func": "msg.payload = {};\nmsg.payload._id = msg.req.params.id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 360,
        "wires": [
            [
                "1af10ef8c4fd631c"
            ]
        ]
    },
    {
        "id": "1af10ef8c4fd631c",
        "type": "objectid",
        "z": "f6204708c05878d8",
        "name": "",
        "selectedProperty": "_id",
        "x": 330,
        "y": 360,
        "wires": [
            [
                "8cb959356df42734"
            ]
        ]
    },
    {
        "id": "254982415e766c2f",
        "type": "objectid",
        "z": "f6204708c05878d8",
        "name": "",
        "selectedProperty": "_id",
        "x": 350,
        "y": 200,
        "wires": [
            [
                "63555e1b90152c72"
            ]
        ]
    },
    {
        "id": "4c5aa2fe54a5bc7c",
        "type": "objectid",
        "z": "f6204708c05878d8",
        "name": "",
        "selectedProperty": "_id",
        "x": 390,
        "y": 1040,
        "wires": [
            [
                "a5079ab3385a3507"
            ]
        ]
    },
    {
        "id": "cc25669f820d2c31",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "upd",
        "func": "msg.payload = {}\nmsg.payload._id = msg.req.params.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1180,
        "wires": [
            [
                "da4ae36287dcb731"
            ]
        ]
    },
    {
        "id": "da4ae36287dcb731",
        "type": "objectid",
        "z": "f6204708c05878d8",
        "name": "",
        "selectedProperty": "_id",
        "x": 350,
        "y": 1180,
        "wires": [
            [
                "beb1bca37c9b54b6"
            ]
        ]
    },
    {
        "id": "c233ceac62fc857d",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "postUser",
        "url": "/postUser",
        "method": "post",
        "upload": true,
        "swaggerDoc": "59bbbdb08ffeb63d",
        "x": 80,
        "y": 1380,
        "wires": [
            [
                "c05516734b94dfad"
            ]
        ]
    },
    {
        "id": "c05516734b94dfad",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "postUser",
        "func": "msg.payload.deleted = false\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1380,
        "wires": [
            [
                "99b3e58a939e2779",
                "cddc6c22cf980a46",
                "b0d2b3825c4e8c31"
            ]
        ]
    },
    {
        "id": "99b3e58a939e2779",
        "type": "mongodb out",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "Users",
        "collection": "Users",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 330,
        "y": 1360,
        "wires": []
    },
    {
        "id": "cddc6c22cf980a46",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b0d2b3825c4e8c31",
        "type": "debug",
        "z": "f6204708c05878d8",
        "name": "Log PostUser",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1400,
        "wires": []
    },
    {
        "id": "de8c0bf1deb11621",
        "type": "http in",
        "z": "f6204708c05878d8",
        "name": "Login",
        "url": "/login",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1460,
        "wires": [
            [
                "0586f224ac1ea90c"
            ]
        ]
    },
    {
        "id": "0586f224ac1ea90c",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "Login",
        "func": "// var email = msg.payload.email;\n// var password = msg.payload.password;\n\nvar email = \"bob@gmail.com\";\nvar password = \"1234\";\n\n// Проверка наличия email и password\nif (!email || !password) {\n    return [null, { payload: 'Имейл или пароль не верные', statusCode: 400 }];\n}\n\n// Подготовка запроса к MongoDB\nmsg.collection = 'Users';\nmsg.operation = 'findOne';\nmsg.payload = { email: email, password: password };\n\n// node.log('Получен запрос с имейлом: ' + email + ' и паролем: ' + password);\n\nreturn [msg, null];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 1460,
        "wires": [
            [
                "0c3e5a2112938de4"
            ]
        ]
    },
    {
        "id": "0c3e5a2112938de4",
        "type": "mongodb in",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "Login",
        "collection": "Users",
        "operation": "find",
        "x": 270,
        "y": 1460,
        "wires": [
            [
                "f72fbd65342eccdc",
                "6fac8054c8a628d9"
            ]
        ]
    },
    {
        "id": "6fac8054c8a628d9",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 390,
        "y": 1440,
        "wires": []
    },
    {
        "id": "f72fbd65342eccdc",
        "type": "debug",
        "z": "f6204708c05878d8",
        "name": "Log Login",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 1480,
        "wires": []
    },
    {
        "id": "59adebed8bc3e408",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "return object",
        "func": "msg.payload = msg.payload[0]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 200,
        "wires": [
            [
                "c61852bcc9124716"
            ]
        ]
    },
    {
        "id": "3ca2ee45610a3712",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "reverse",
        "func": "msg.payload = msg.payload.reverse();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 960,
        "wires": [
            [
                "a0097bfbc353da3f"
            ]
        ]
    },
    {
        "id": "6958c528ad63263e",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 370,
        "y": 40,
        "wires": []
    },
    {
        "id": "07cc33f43870d1e4",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "del",
        "func": "msg.payload = {}\nmsg.payload._id = msg.req.params.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "\n",
        "libs": [],
        "x": 250,
        "y": 700,
        "wires": [
            [
                "da7151e39924ee49"
            ]
        ]
    },
    {
        "id": "da7151e39924ee49",
        "type": "objectid",
        "z": "f6204708c05878d8",
        "name": "",
        "selectedProperty": "_id",
        "x": 370,
        "y": 700,
        "wires": [
            [
                "4da2b5250d41aca3",
                "dc545ac25b7a1c8b"
            ]
        ]
    },
    {
        "id": "082f6d61ee233efd",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "del",
        "func": "msg.payload = {}\nmsg.payload._id = msg.req.params.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "\n",
        "libs": [],
        "x": 230,
        "y": 1120,
        "wires": [
            [
                "83b2a088031bb14c"
            ]
        ]
    },
    {
        "id": "83b2a088031bb14c",
        "type": "objectid",
        "z": "f6204708c05878d8",
        "name": "",
        "selectedProperty": "_id",
        "x": 350,
        "y": 1120,
        "wires": [
            [
                "c08a1f65159f319f",
                "5c12f9defce31e82"
            ]
        ]
    },
    {
        "id": "c905b1188abd46b3",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "del",
        "func": "msg.payload = {}\nmsg.payload._id = msg.req.params.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "\n",
        "libs": [],
        "x": 210,
        "y": 280,
        "wires": [
            [
                "3a250623da1a8f76"
            ]
        ]
    },
    {
        "id": "3a250623da1a8f76",
        "type": "objectid",
        "z": "f6204708c05878d8",
        "name": "",
        "selectedProperty": "_id",
        "x": 310,
        "y": 280,
        "wires": [
            [
                "14dcf2d4fb60241a",
                "752ecd61f6c59049"
            ]
        ]
    },
    {
        "id": "c31f672b495f49f5",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "save category",
        "func": "msg.categories = msg.payload\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 520,
        "wires": [
            [
                "d0ed6eae5006d3e9"
            ]
        ]
    },
    {
        "id": "68b3d5c99c74fe45",
        "type": "switch",
        "z": "f6204708c05878d8",
        "name": "need amounts",
        "property": "needAmount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 520,
        "wires": [
            [
                "c31f672b495f49f5"
            ]
        ]
    },
    {
        "id": "d0ed6eae5006d3e9",
        "type": "mongodb in",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "СountСategories",
        "collection": "Products",
        "operation": "find",
        "x": 930,
        "y": 520,
        "wires": [
            [
                "b79045eb3e14784d"
            ]
        ]
    },
    {
        "id": "b79045eb3e14784d",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "CountCategories",
        "func": "const countMap = msg.payload.reduce((acc, obj) => {\n    const id = obj.category?._id\n    if (acc[id]) {\n        acc[id] += 1;\n    } else {\n        acc[id] = 1;\n    }\n    return acc;\n}, {});\n\nmsg.payload = msg.categories.map(el => { el.amount = countMap[el?._id] ?? 0; return el})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 520,
        "wires": [
            [
                "4fb906e44b392e53",
                "60c8414c22849930"
            ]
        ]
    },
    {
        "id": "60c8414c22849930",
        "type": "http response",
        "z": "f6204708c05878d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1290,
        "y": 500,
        "wires": []
    },
    {
        "id": "4fb906e44b392e53",
        "type": "debug",
        "z": "f6204708c05878d8",
        "name": "Log CountCat",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 540,
        "wires": []
    },
    {
        "id": "cfc70109929efc4a",
        "type": "switch",
        "z": "f6204708c05878d8",
        "name": "no need",
        "property": "needAmount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 560,
        "wires": [
            [
                "972a5d48a7e0c243"
            ]
        ]
    },
    {
        "id": "21ed8fd5c2f04027",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "save category",
        "func": "msg.needAmount = JSON.parse(msg.req.query.needAmount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 540,
        "wires": [
            [
                "68b3d5c99c74fe45",
                "cfc70109929efc4a"
            ]
        ]
    },
    {
        "id": "fc65c5ec5713a14c",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "top5",
        "func": "let productSales = {};\n\nmsg.payload.forEach(order => {\n    order.products.forEach(product => {\n        if (productSales[product.product]) {\n            productSales[product.product].quantity += product.amount;\n        } else {\n            productSales[product.product] = {\n                name: product.name,\n                quantity: product.amount\n            };\n        }\n    });\n});\n\nlet sortedProducts = Object.keys(productSales)\n    .map(key => ({\n        _id: key,\n        name: productSales[key].name,\n        quantity: productSales[key].quantity\n    }))\n    .sort((a, b) => b.quantity - a.quantity)\n    .slice(0, 5);\n\nmsg.payload = {products:msg.product, top5:sortedProducts};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 120,
        "wires": [
            [
                "abce1960aea31c88"
            ]
        ]
    },
    {
        "id": "5329f791a4bc3aea",
        "type": "mongodb in",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "top5",
        "collection": "Order",
        "operation": "find",
        "x": 550,
        "y": 120,
        "wires": [
            [
                "fc65c5ec5713a14c"
            ]
        ]
    },
    {
        "id": "3d4909f6dd300bbb",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "save products",
        "func": "msg.product = msg.payload;\nmsg.payload={}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 120,
        "wires": [
            [
                "5329f791a4bc3aea"
            ]
        ]
    },
    {
        "id": "0ab334bca83255b0",
        "type": "mongodb in",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "Less than 10",
        "collection": "Products",
        "operation": "aggregate",
        "x": 250,
        "y": 960,
        "wires": [
            [
                "51e7cf2a17b077d6"
            ]
        ]
    },
    {
        "id": "51e7cf2a17b077d6",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "Filter",
        "func": "msg.products = msg.payload.filter(el=>el.quantity<10);\nmsg.payload = {};\n\n// msg.query = { quantity: { $gt: 10 } }\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 960,
        "wires": [
            [
                "7c16ae8781378425"
            ]
        ]
    },
    {
        "id": "a0097bfbc353da3f",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "add low stock",
        "func": "const lowStock = msg.products.filter(product =>\n    msg.payload.some(order =>\n        !order.paid && order.products.some(orderProduct => orderProduct._id.toString() === product._id.toString())\n    )\n);\n\nmsg.payload = { orders: msg.payload, lowStock };\ndelete msg.products\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 960,
        "wires": [
            [
                "f3229783dfccf6b5"
            ]
        ]
    },
    {
        "id": "f3229783dfccf6b5",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "filterByQuery",
        "func": "if (msg.req.query.query) {\n    msg.payload.orders = msg.payload.orders.filter(el => el?.number?.toString().includes(msg.req.query.query));\n}\n\nif (msg.req.query.from) { \n    let totalIncome = 0;\n\n    const dateRange = msg.req.query;\n    const fromDate = new Date(dateRange.from).getTime();\n    const toDate = dateRange.to ? (new Date(dateRange.to).getTime() + (24 * 60 * 60 * 1000)) : new Date().getTime();  // plus one day\n\n    if (isNaN(fromDate) || isNaN(toDate)) {\n        msg.payload = { error: \"Invalid date range\" };\n        return msg;\n    }\n\n    const filteredOrders = msg.payload.orders.filter(order => {\n        const orderDate = new Date(order.date).getTime();\n\n        if (orderDate >= fromDate && orderDate <= toDate) {\n            totalIncome += parseFloat(order.totalCost) || 0;\n            return true\n        }\n    });\n\n    msg.payload = { orders: filteredOrders, lowStock: msg.payload.lowStock, totalIncome: totalIncome.toFixed(2) };\n    }\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 960,
        "wires": [
            [
                "2c7227fbc2ac9524"
            ]
        ]
    },
    {
        "id": "abce1960aea31c88",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "SearchByQuery",
        "func": "if (msg.req.query.query) {\n        msg.payload.products = msg.payload.products.filter(el => el.name.toLowerCase().includes(msg.req.query.query.toLowerCase()));\n}\nif (msg.req.query.category){\n        msg.payload.products = msg.payload.products.filter(el => msg.req.query.category.includes(el.category._id.toString()));\n}\nif (msg.req.query.price_min || msg.req.query.price_max) {\n        const min = +msg.req.query.price_min || 0;\n        const max = +msg.req.query.price_max || false;\n        msg.payload.products = msg.payload.products.filter(el => { if (+el.price >= min && (max ? +el.price <=max : true) ) { return true }} );\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 120,
        "wires": [
            [
                "f5f321b839154077",
                "29844c99a63c06b0"
            ]
        ]
    },
    {
        "id": "7741118dea86650f",
        "type": "mongodb in",
        "z": "f6204708c05878d8",
        "mongodb": "8dd5f1267c660601",
        "name": "Less than 10",
        "collection": "Products",
        "operation": "aggregate",
        "x": 230,
        "y": 900,
        "wires": [
            [
                "94043f513760f198"
            ]
        ]
    },
    {
        "id": "94043f513760f198",
        "type": "function",
        "z": "f6204708c05878d8",
        "name": "add number",
        "func": "const body = msg.req.body;\nif (msg.payload.length === 0) { \n    body.number=1\n} else { \n    const lastNumber = msg.payload[msg.payload.length - 1].number\n    body.number = lastNumber ? (+lastNumber +1) : 1\n}\n\nmsg.payload = body;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 900,
        "wires": [
            [
                "95331004f0b45626",
                "a1f17a7c0a4505ed"
            ]
        ]
    },
    {
        "id": "cf524b0ad7dca115",
        "type": "swagger-doc",
        "summary": "Add new product",
        "description": "Add new documents to Products collection",
        "tags": "['post', 'Products']",
        "consumes": "['application/json']",
        "produces": "['application/json']",
        "parameters": [
            {
                "name": "",
                "in": null,
                "required": false
            }
        ],
        "responses": {
            "201": {
                "description": "",
                "code": "201"
            }
        },
        "deprecated": false
    },
    {
        "id": "8dd5f1267c660601",
        "type": "mongodb",
        "hostname": "mongodb-9380-ubos-578lh-mongodb-9380.ubos-578lh",
        "topology": "direct",
        "connectOptions": "authSource=admin",
        "port": "27017",
        "db": "mongodb-9380",
        "name": "mongodb-9380"
    },
    {
        "id": "ee9209fb0e6539c7",
        "type": "swagger-doc",
        "summary": "Retrieve all products",
        "description": "Retrieves all documents from the Product collection and returns them in the response",
        "tags": "['Get', 'Products']",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "query",
                "in": "query",
                "required": false,
                "type": "string"
            },
            {
                "name": "price_min",
                "in": "query",
                "required": false,
                "type": "number"
            },
            {
                "name": "price_max",
                "in": "query",
                "required": false,
                "type": "number"
            }
        ],
        "responses": {
            "200": {
                "description": ""
            }
        },
        "deprecated": false
    },
    {
        "id": "ebb73bc2c5279f28",
        "type": "swagger-doc",
        "summary": "Find product by id",
        "description": "Retrieves document from the Product collection based on the provided ID",
        "tags": "['ID', 'Products', 'Get']",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
            }
        ],
        "responses": {
            "200": {
                "description": ""
            }
        },
        "deprecated": false
    },
    {
        "id": "29aaf1009dc089e3",
        "type": "swagger-doc",
        "summary": "Delete product",
        "description": "Delete document from the Product collection based on the provided ID",
        "tags": "['ID', 'Products', 'Delete']",
        "consumes": "text/plain",
        "produces": "",
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
            }
        ],
        "responses": {
            "200": {
                "description": "",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "0c61fe2d9c420388",
        "type": "swagger-doc",
        "summary": "Update product by ID",
        "description": "Update document from the Product collection based on the provided ID",
        "tags": "['ID', 'Products', 'Put']",
        "consumes": "['application/json']",
        "produces": "",
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
            },
            {
                "name": "name",
                "in": "body",
                "required": false,
                "schema": {
                    "type": "object"
                }
            },
            {
                "name": "price",
                "in": "body",
                "required": false,
                "schema": {
                    "type": "object"
                }
            },
            {
                "name": "quantity",
                "in": "body",
                "required": false,
                "schema": {
                    "type": "object"
                }
            },
            {
                "name": "category",
                "in": "body",
                "required": false,
                "schema": {
                    "type": "object"
                }
            }
        ],
        "responses": {
            "201": {
                "description": ""
            }
        },
        "deprecated": false
    },
    {
        "id": "aaddef4d730c56d2",
        "type": "swagger-doc",
        "summary": "Retrieve all category",
        "description": "Retrieves all documents from the Category collection and returns them in the response",
        "tags": "['Get', 'Category']",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "needAmount",
                "in": "query",
                "required": false,
                "type": "boolean"
            }
        ],
        "responses": {
            "200": {
                "description": ""
            }
        },
        "deprecated": false
    },
    {
        "id": "03727c6effbb29e6",
        "type": "swagger-doc",
        "summary": "Add new category",
        "description": "Add new documents to Category collection",
        "tags": "['post', 'Category']",
        "consumes": "['application/json']",
        "produces": "['application/json']",
        "parameters": [],
        "responses": {
            "201": {
                "description": "",
                "code": "201"
            }
        },
        "deprecated": false
    },
    {
        "id": "58ed174fd26e8307",
        "type": "swagger-doc",
        "summary": "Find category by id",
        "description": "Retrieves document from the Category collection based on the provided ID",
        "tags": "['ID', 'Category', 'Get']",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
            }
        ],
        "responses": {
            "200": {
                "description": "",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "7c05fce82701f832",
        "type": "swagger-doc",
        "summary": "Delete category by ID",
        "description": "Delete document from the Category collection based on the provided ID",
        "tags": "['ID', 'Category', 'Delete']",
        "consumes": "text/plain",
        "produces": "",
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
            }
        ],
        "responses": {
            "200": {
                "description": "",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "be18c0b5fa39a3c4",
        "type": "swagger-doc",
        "summary": "Update categoryby ID",
        "description": "Update document from the Category collection based on the provided ID",
        "tags": "['ID', 'Category', 'Put']",
        "consumes": "['application/json']",
        "produces": "",
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
            },
            {
                "name": "name",
                "in": "body",
                "required": false,
                "schema": {
                    "type": "object"
                }
            }
        ],
        "responses": {
            "201": {
                "description": ""
            }
        },
        "deprecated": false
    },
    {
        "id": "2f6ee44f24f05311",
        "type": "swagger-doc",
        "summary": "Retrieve all orders",
        "description": "This endpoint retrieves all documents from the Order collection and returns them in the response",
        "tags": "['Get', 'Order']",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "query",
                "in": "query",
                "required": false
            },
            {
                "name": "from",
                "in": "query",
                "required": false
            },
            {
                "name": "to",
                "in": "query",
                "required": false
            }
        ],
        "responses": {
            "200": {
                "description": ""
            }
        },
        "deprecated": false
    },
    {
        "id": "9992219b0b3b6a5a",
        "type": "swagger-doc",
        "summary": "Add new order",
        "description": "This endpoint is used to add new documents to Order collection",
        "tags": "['post', 'Order']",
        "consumes": "['application/json']",
        "produces": "['application/json']",
        "parameters": [],
        "responses": {
            "201": {
                "description": ""
            }
        },
        "deprecated": false
    },
    {
        "id": "594a47cf34e67aee",
        "type": "swagger-doc",
        "summary": "Find order by id",
        "description": "Retrieves document from the Order collection based on the provided ID",
        "tags": "['ID', 'Order', 'Get']",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
            }
        ],
        "responses": {
            "200": {
                "description": "",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "8ba02c3093687597",
        "type": "swagger-doc",
        "summary": "Delete order by id",
        "description": "Delete document from the Order collection based on the provided ID",
        "tags": "['ID', 'Order', 'Delete']",
        "consumes": "text/plain",
        "produces": "",
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
            }
        ],
        "responses": {
            "200": {
                "description": "",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "2a7e921bb453b54a",
        "type": "swagger-doc",
        "summary": "Update order by id",
        "description": "Update document from the Order collection based on the provided ID",
        "tags": "['ID', 'Order', 'Put']",
        "consumes": "['application/json']",
        "produces": "",
        "parameters": [],
        "responses": {
            "201": {
                "description": ""
            }
        },
        "deprecated": false
    },
    {
        "id": "e320c1ed934e2374",
        "type": "swagger-doc",
        "summary": "Delete all order",
        "description": "Delete all document from the Order collection",
        "tags": "['Order ', 'Delete', 'All']",
        "consumes": "text/plain",
        "produces": "",
        "parameters": [],
        "responses": {},
        "deprecated": false
    },
    {
        "id": "59bbbdb08ffeb63d",
        "type": "swagger-doc",
        "summary": "Add new product",
        "description": "Add new documents to Products collection",
        "tags": "['post', 'Products']",
        "consumes": "['application/json']",
        "produces": "['application/json']",
        "parameters": [
            {
                "name": "",
                "in": null,
                "required": false
            }
        ],
        "responses": {
            "201": {
                "description": "",
                "code": "201"
            }
        },
        "deprecated": false
    }
]